<?xml version="1.0" encoding="UTF-8"?>
<!--
mvc.zul

{{IS_NOTE
        Purpose:

        Description:

        History:
                Thu Nov 13 16:07:16 TST 2008, Created by Flyworld
}}IS_NOTE

Copyright (C) 2008 Potix Corporation. All Rights Reserved.

{{IS_RIGHT
}}IS_RIGHT
-->
<window id="demo" apply="org.zkoss.zkdemo.userguide.DemoWindowComposer" xmlns:h="http://www.w3.org/1999/xhtml"
	xmlns:zk="http://www.zkoss.org/2005/zk">
	<vbox>
		<html><![CDATA[
				<h4>MVC</h4>
				<p>The ZK Team are always looking for the best practice to realize MVC approachs in ZK. In this <a href="http://www.zkoss.org/smalltalks/mvc/" target="zkdemo"> article</a> 
				and this <a href="http://www.zkoss.org/smalltalks/mvc2" target="zkdemo">article</a> there have been some discusions about MVC programming on ZK. In this article, 
				I am going to discuss in details the three utility classes and three helper methods provided by ZK that will help developers to write applications 
				in Model-View-Controller pattern easily. Besides, they also provides a convenient path for refactoring prototype codes that originally written in zul 
				zscript to pure Java class codes.</p>
				<p>I will use a simple example to illustrate the power of these utility classes and helper methods.</p>
			]]></html>
		<separator bar="true" />
		<html><![CDATA[
			<h5>The Example</h5>
			<image src="http://www.zkoss.org/smalltalks/mvc3/mvc3-1.png" />	
			<h5>Content:</h5>
			<ul>
				<li>The Day Before - Implement Own Composer Class </li>
				<li>Just Write those onXxx Event Listener Codes</li>
				<li>Auto-wire the Components and Beans</li>
				<li>Supporting of Implicit Objects</li>
				<li>Get Rid of Those "forward" Attributes</li>
				<li>What if I Cannot Inherit from These ZK Utility Classes</li>
				<li>How About if I Use the "use" attribute</li>
				<li>Download</li>
			<ul>
		]]></html>
	</vbox>
	For more information, see our
	<toolbarbutton id="target" label="Smalltalk" target="zkdemo"
		href="http://www.zkoss.org/smalltalks/mvc3/" />
</window>
